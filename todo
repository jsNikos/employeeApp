
- create broadcaster service
  Try to use mongoose middleware schema.post('save'/'update')
  to trigger broadcasts. (see Shift, Message)
  (broadcaster adds connections based on authenticationService.findUser(req))
  The client will register in controllers the 'topic' and open ws.
  In case of message in handles: model.merge(change).
  The client (has automatic reconnect as options and running in webworker)
  this becomes own bower repo
  The broadcast must check authorization of connection on each send/receive event.
  The check is:  connection.findSessionById(connection.sessionId) check user-attribute
  This only, in cases when the topic requires authentication. Close
  otherwise.

- redirect to login for all requests
  which are not authorized (check authorization for each request) and set
  response-status to 403 (un-authorized) 401 (un-authenticated)
  Protect '/' server-side by default, all others like /login must exclude
  themself from there

- security: needs mechanism to show login-page immediately when 401 is discovered

- enhance scheduler
* something what works quick in mobile
* schedule by employee/role
* create 2h/4h/8h button -> select role -> show in editor -> ok/cancel
* overlay from last-week
* show problematic shifts and let fix by flowing throw process

- details:
* swapping mechanism needs logic (restrict possible swappers, ...)
* the Employee.name must be unique
* passwords never return in API, passwords must be md5-hashed in db
* make angular working with requirejs or system
* use sequelize when it comes to mysql
* have a look at sails.js - try to build all with this

- bugs:
 * 1. select employee
   2. delete Employee
   3. press create Employee - the form is filled already
