- create login-page / redirect to login for all requests
  which are not authorized (check authorization for each request) and set
  response-status to 401 or 405??

- authenticationService.findUser(req)  req.user (passport provides this)
  (based on this the broadcaster is registering subscribtions)
- create message page
- create broadcaster service

- security: needs mechanism to show login-page immediately when 401 is discovered

- create swapper mechanism in schedule-page
  (first allow all shift to be swapped)
* when ask-to-swap send message to others
* use websocket/broadcaster to push
* if one accepts send message back that was accepted
  and change schedule of both; again use broadcaster
  to push the schedule update to clients

- create schedule
* something what works quick in mobile
* schedule by employee/role
* create 2h/4h/8h button -> select role -> show in editor -> ok/cancel
* overlay from last-week
* show problematic shifts and let fix by flowing throw process

- details:
* the Employee.name must be unique
* passwords never return in API, passwords must be md5-hashed in db
* error logs thrown from 500-error handler dosn't contain traces

- bugs:
 * 1. select employee
   2. delete Employee
   3. press create Employee - the form is filled already
